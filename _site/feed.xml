<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jiong</title>
    <description></description>
    <link>http://strange-jiong.github.io/</link>
    <atom:link href="http://strange-jiong.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 11 Jul 2016 14:28:16 +0800</pubDate>
    <lastBuildDate>Mon, 11 Jul 2016 14:28:16 +0800</lastBuildDate>
    <generator>Jekyll v3.1.1</generator>
    
      <item>
        <title>python科学计算学习：numpy</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;安装&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;具体特性的使用&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;参考资料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;毕设的程序设计中使用了python来处理数据，主要使用的是numpy包，网上大部分对numpy进行介绍的教程比较老旧，想要使用的功能不太容易找到。因此，写这篇文章来对现有的一些资源就行整理，当然想要更全面的了解numpy的使用还是从访问&lt;a href=&quot;http://docs.scipy.org/doc/numpy-1.11.0/user/quickstart.html&quot;&gt;官方手册开始&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;安装&lt;/h2&gt;
&lt;p&gt;win下
&lt;code class=&quot;highlighter-rouge&quot;&gt;
pip isntall numpy
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;当然最好还是直接安装pythonxy或者Anaconda的集成包。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;具体特性的使用&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;import  numpy as np&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a=np.array([1,2,3,4])&lt;/code&gt;由&lt;code class=&quot;highlighter-rouge&quot;&gt;a.shape&lt;/code&gt;可知结果为&lt;code class=&quot;highlighter-rouge&quot;&gt;(4,)&lt;/code&gt;，说明a是一个列向量
而&lt;code class=&quot;highlighter-rouge&quot;&gt;a=（[[1,2,3,4]])&lt;/code&gt;是一个横向量 ；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;c=np.array([[1, 2, 3, 4],[4, 5, 6, 7],[7, 5, 6, 8]])&lt;/code&gt;对c的shape属性赋值可以改变数组的形状。c.shape=4,3 就是将这个3&lt;em&gt;4的数组变为4&lt;/em&gt;3的数组；结果是：&lt;code class=&quot;highlighter-rouge&quot;&gt;array([[1, 2, 3],[4, 4, 5],[6, 7, 7],[5, 6, 8]])&lt;/code&gt;。当你懒得算有计算每一排有几个的时候可以这样写：&lt;code class=&quot;highlighter-rouge&quot;&gt;c.shape=4,-1&lt;/code&gt;，这样的效果也是一样的，-1可以用来代替一个具体值。但是在不能均分的情况下就会报错。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;d=c.reshape&lt;/code&gt; 是在不改变原来数据的情况下实现对数据的变形,也可以实现上述的4&lt;em&gt;3数组变为3&lt;/em&gt;4的数组功能，&lt;code class=&quot;highlighter-rouge&quot;&gt;d=c.reshape((3,4))&lt;/code&gt;；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;type(c)&lt;/code&gt;查看c的数据类型，&lt;code class=&quot;highlighter-rouge&quot;&gt;c.dtype&lt;/code&gt;查看c里面的数据的类型；所以也可以在定义的时候就定下数据类型， &lt;code class=&quot;highlighter-rouge&quot;&gt;b=np.array([1.2,2,2,3.1],dtype=np.int)&lt;/code&gt;，结果是&lt;code class=&quot;highlighter-rouge&quot;&gt;array([1, 2, 2, 3])&lt;/code&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;arange()&lt;/code&gt;相当于函数&lt;code class=&quot;highlighter-rouge&quot;&gt;range()&lt;/code&gt;，指定开始值，终值，步长来创建一维数组。注意 不包括终值 ，例如： b=np.arange(0,1,0.2) ，结果是：array([ 0. ,  0.2,  0.4,  0.6,  0.8]) 。但是&lt;code class=&quot;highlighter-rouge&quot;&gt;linspace()&lt;/code&gt;却是要包括终值的。他是指定开始值，终值，数据个数来创建一维数组。例如： &lt;code class=&quot;highlighter-rouge&quot;&gt;b=np.linspace(1,9,10)&lt;/code&gt;，就是要将1到9之间均分为9份，结果是：&lt;code class=&quot;highlighter-rouge&quot;&gt;array([ 1.        ,  1.88888889,  2.77777778,  3.66666667,  4.55555556,5.44444444,  6.33333333,  7.22222222,  8.11111111,  9.        ])&lt;/code&gt; 。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;zeros()&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;ones()&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;empty()&lt;/code&gt;都是按照指定的形状生成相应的数组。例如： &lt;code class=&quot;highlighter-rouge&quot;&gt;np.ones((2,3))&lt;/code&gt;，结果就是 &lt;code class=&quot;highlighter-rouge&quot;&gt;array([[ 1.,  1.,  1.],  [ 1.,  1.,  1.]])&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;np.zeros((3,4),dtype=np.float)&lt;/code&gt;，结果就是&lt;code class=&quot;highlighter-rouge&quot;&gt;array([[ 0.,  0.,  0.,  0.],  [ 0.,  0.,  0.,  0.],[ 0.,  0.,  0.,  0.]])&lt;/code&gt;。唯一不同的是 &lt;code class=&quot;highlighter-rouge&quot;&gt;np.empty((5,2))&lt;/code&gt;，结果为&lt;code class=&quot;highlighter-rouge&quot;&gt;array([[  2.43631958e-266,   0.00000000e+000], [  0.00000000e+000,   0.00000000e+000],[  0.00000000e+000,   0.00000000e+000], [  0.00000000e+000,   0.00000000e+000], [  0.00000000e+000,   0.00000000e+000]])&lt;/code&gt;， 里面不是数据，而是给数据分配的空间地址。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;切片  &lt;code class=&quot;highlighter-rouge&quot;&gt;a=np.arange(0,10,1)&lt;/code&gt;，我们可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;a[3:7]&lt;/code&gt;，表示&lt;code class=&quot;highlighter-rouge&quot;&gt;a[3]&lt;/code&gt;到&lt;code class=&quot;highlighter-rouge&quot;&gt;a[6]&lt;/code&gt;的所有元素组成的数组&lt;code class=&quot;highlighter-rouge&quot;&gt;array([3, 4, 5, 6])&lt;/code&gt;；还可以在其中加上步长，但都 不包括最后一个元素。而&lt;code class=&quot;highlighter-rouge&quot;&gt;a[:-1]&lt;/code&gt;,其中 含有负数就表示从后面开始；若是步长为负数，表示倒序排列 ，如：&lt;code class=&quot;highlighter-rouge&quot;&gt;a[7:1:-1]&lt;/code&gt;   结果是&lt;code class=&quot;highlighter-rouge&quot;&gt;array([7, 6, 5, 4, 3, 2])&lt;/code&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;通过整数列表获得元素组成新的数组：&lt;code class=&quot;highlighter-rouge&quot;&gt;a[[1,2,2,3,5]]&lt;/code&gt;。  取出a中的元素构成新的数组，结果是&lt;code class=&quot;highlighter-rouge&quot;&gt;array([1, 2, 2, 3, 5])&lt;/code&gt;；下标也可是负数；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;np.random.rand(10)&lt;/code&gt;产生数值为0～1的随机数组；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;记住这个例子：
```
»&amp;gt; a=np.arange(0,60,10).reshape(-1,1)+np.arange(0,6)
»&amp;gt; a
array([[ 0,  1,  2,  3,  4,  5],
   [10, 11, 12, 13, 14, 15],
   [20, 21, 22, 23, 24, 25],
   [30, 31, 32, 33, 34, 35],
   [40, 41, 42, 43, 44, 45],
   [50, 51, 52, 53, 54, 55]])&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;```
其中&lt;code class=&quot;highlighter-rouge&quot;&gt;a[3,3:6]&lt;/code&gt;表示第4行的第4到6列，结果是&lt;code class=&quot;highlighter-rouge&quot;&gt;array([33, 34, 35])&lt;/code&gt;； 
&lt;code class=&quot;highlighter-rouge&quot;&gt;a[:2]&lt;/code&gt;表示前两列：
&lt;code class=&quot;highlighter-rouge&quot;&gt;array([[ 0,  1,  2,  3,  4,  5],[10, 11, 12, 13, 14, 15]])&lt;/code&gt;；
而&lt;code class=&quot;highlighter-rouge&quot;&gt;a[:,2]&lt;/code&gt;表示第3列，&lt;code class=&quot;highlighter-rouge&quot;&gt;array([ 2, 12, 22, 32, 42, 52])&lt;/code&gt;；
&lt;code class=&quot;highlighter-rouge&quot;&gt;a[1::,::2]&lt;/code&gt;表示的是
&lt;code class=&quot;highlighter-rouge&quot;&gt;array([[10, 12, 14],[20, 22, 24],[30, 32, 34],[40, 42, 44],[50, 52, 54]])&lt;/code&gt;，即从第二行开始，选取每行中的元素，步进为2。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;参考资料&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/ikerpeng/article/details/19926799?utm_source=tuicool&amp;amp;utm_medium=referral&quot;&gt;http://blog.csdn.net/ikerpeng/article/details/19926799?utm_source=tuicool&amp;amp;utm_medium=referral&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 11 Jul 2016 00:00:00 +0800</pubDate>
        <link>http://strange-jiong.github.io/2016/07/11/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97%E5%AD%A6%E4%B9%A0-numpy/</link>
        <guid isPermaLink="true">http://strange-jiong.github.io/2016/07/11/python%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97%E5%AD%A6%E4%B9%A0-numpy/</guid>
        
        <category>python</category>
        
        <category>numpy</category>
        
        
        <category>pyhton</category>
        
      </item>
    
      <item>
        <title>Git 如何 clone 非 master 分支的代码</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;问题描述&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;解决方法&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;原来的解决方案&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;问题描述&lt;/h2&gt;

&lt;p&gt;我们每次使用命令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@gitlab.xxx.com:xxxxx.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;默认 clone 的是这个仓库的 master 分支。如果最新的代码不在 master 分支上，该如何拿到呢？如下图所示，最新的代码可能在&lt;code class=&quot;highlighter-rouge&quot;&gt;daily/1.4.1&lt;/code&gt;分支上，我们希望拿到这个分支上的代码。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2016/07/07/577e349ab42ed.png&quot; alt=&quot;7f07c8f6deef169ef6be5103bbd3e932f8676bb1.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;解决方法&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;刚刚开周会的时候，自己洋洋得意的分享我的解决方案，但是……经过与团队成员的的讨论，自己的方法弱爆了，现在把更优雅的方法写一下。原来写的方法并不太适合用在这个场景里。&lt;/strong&gt; 我之前写的方法在文章后面。&lt;/p&gt;

&lt;p&gt;直接使用命令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch -r #查看远程分支
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;或&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch -a #查看所有分支
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;会显示&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;origin/HEAD -&amp;gt; origin/master
origin/daily/1.2.2
origin/daily/1.3.0
origin/daily/1.4.1
origin/develop
origin/feature/daily-1.0.0
origin/master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后直接&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout origin/daily/1.4.1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;就好了。。。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;原来的解决方案&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;其实我原来写的这个方法更多的是：设置已有的本地分支跟踪一个刚刚拉取下来的远程分支，或者想要修改正在跟踪的上游分支。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;我们在本地先建立一个分支，建议名称和远程的想要同步的分支名称一样。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch daily/1.4.1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在切换到这个本地分支&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout daily/1.4.1
# Switched to branch &#39;daily/1.4.1&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接下来就可以去建立上游分支的关联了，但是这个命令比较长，不好记，我们可以直接先&lt;code class=&quot;highlighter-rouge&quot;&gt;pull&lt;/code&gt;一下，git 会提示我们相应的操作和命令。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/&amp;lt;branch&amp;gt; daily/1.4.1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;我们看到最后一行，执行这个命令，即可完成与上游分支的关联。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch --set-upstream-to=origin/daily/1.4.1 daily/1.4.1
# Branch daily/1.4.1 set up to track remote branch daily/1.4.1 from origin.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后再&lt;code class=&quot;highlighter-rouge&quot;&gt;pull&lt;/code&gt;一下就好了！&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git pull
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 07 Jul 2016 00:00:00 +0800</pubDate>
        <link>http://strange-jiong.github.io/2016/07/07/git-clone-not-master-branch/</link>
        <guid isPermaLink="true">http://strange-jiong.github.io/2016/07/07/git-clone-not-master-branch/</guid>
        
        <category>Git</category>
        
        <category>GitHub</category>
        
        <category>分支</category>
        
        
        <category>GitHub</category>
        
      </item>
    
  </channel>
</rss>
